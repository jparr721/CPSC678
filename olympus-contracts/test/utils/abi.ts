export const uniPairAbi = [
    { inputs: [], stateMutability: "nonpayable", type: "constructor" },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "owner", type: "address" },
            { indexed: true, internalType: "address", name: "spender", type: "address" },
            { indexed: false, internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "sender", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
        ],
        name: "Burn",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "sender", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
        ],
        name: "Mint",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "sender", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount0In", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount1In", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount0Out", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount1Out", type: "uint256" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
        ],
        name: "Swap",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: false, internalType: "uint112", name: "reserve0", type: "uint112" },
            { indexed: false, internalType: "uint112", name: "reserve1", type: "uint112" },
        ],
        name: "Sync",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "from", type: "address" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MINIMUM_LIQUIDITY",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "", type: "address" },
            { internalType: "address", name: "", type: "address" },
        ],
        name: "allowance",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "approve",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "balanceOf",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "to", type: "address" }],
        name: "burn",
        outputs: [
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getReserves",
        outputs: [
            { internalType: "uint112", name: "_reserve0", type: "uint112" },
            { internalType: "uint112", name: "_reserve1", type: "uint112" },
            { internalType: "uint32", name: "_blockTimestampLast", type: "uint32" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "_token0", type: "address" },
            { internalType: "address", name: "_token1", type: "address" },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "kLast",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "to", type: "address" }],
        name: "mint",
        outputs: [{ internalType: "uint256", name: "liquidity", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "nonces",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "v", type: "uint8" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "price0CumulativeLast",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "price1CumulativeLast",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "to", type: "address" }],
        name: "skim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "amount0Out", type: "uint256" },
            { internalType: "uint256", name: "amount1Out", type: "uint256" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "bytes", name: "data", type: "bytes" },
        ],
        name: "swap",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        stateMutability: "view",
        type: "function",
    },
    { inputs: [], name: "sync", outputs: [], stateMutability: "nonpayable", type: "function" },
    {
        inputs: [],
        name: "token0",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "token1",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "transfer",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "transferFrom",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "nonpayable",
        type: "function",
    },
];

export const easyAuctionAbi = [
    { inputs: [], stateMutability: "nonpayable", type: "constructor" },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "auctionId", type: "uint256" },
            {
                indexed: false,
                internalType: "uint96",
                name: "soldAuctioningTokens",
                type: "uint96",
            },
            { indexed: false, internalType: "uint96", name: "soldBiddingTokens", type: "uint96" },
            {
                indexed: false,
                internalType: "bytes32",
                name: "clearingPriceOrder",
                type: "bytes32",
            },
        ],
        name: "AuctionCleared",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "auctionId", type: "uint256" },
            { indexed: true, internalType: "uint64", name: "userId", type: "uint64" },
            { indexed: false, internalType: "uint96", name: "buyAmount", type: "uint96" },
            { indexed: false, internalType: "uint96", name: "sellAmount", type: "uint96" },
        ],
        name: "CancellationSellOrder",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "auctionId", type: "uint256" },
            { indexed: true, internalType: "uint64", name: "userId", type: "uint64" },
            { indexed: false, internalType: "uint96", name: "buyAmount", type: "uint96" },
            { indexed: false, internalType: "uint96", name: "sellAmount", type: "uint96" },
        ],
        name: "ClaimedFromOrder",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "auctionId", type: "uint256" },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "_auctioningToken",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "_biddingToken",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "orderCancellationEndDate",
                type: "uint256",
            },
            { indexed: false, internalType: "uint256", name: "auctionEndDate", type: "uint256" },
            { indexed: false, internalType: "uint64", name: "userId", type: "uint64" },
            {
                indexed: false,
                internalType: "uint96",
                name: "_auctionedSellAmount",
                type: "uint96",
            },
            { indexed: false, internalType: "uint96", name: "_minBuyAmount", type: "uint96" },
            {
                indexed: false,
                internalType: "uint256",
                name: "minimumBiddingAmountPerOrder",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "minFundingThreshold",
                type: "uint256",
            },
            { indexed: false, internalType: "address", name: "allowListContract", type: "address" },
            { indexed: false, internalType: "bytes", name: "allowListData", type: "bytes" },
        ],
        name: "NewAuction",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "auctionId", type: "uint256" },
            { indexed: true, internalType: "uint64", name: "userId", type: "uint64" },
            { indexed: false, internalType: "uint96", name: "buyAmount", type: "uint96" },
            { indexed: false, internalType: "uint96", name: "sellAmount", type: "uint96" },
        ],
        name: "NewSellOrder",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint64", name: "userId", type: "uint64" },
            { indexed: true, internalType: "address", name: "userAddress", type: "address" },
        ],
        name: "NewUser",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint64", name: "userId", type: "uint64" },
        ],
        name: "UserRegistration",
        type: "event",
    },
    {
        inputs: [],
        name: "FEE_DENOMINATOR",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "auctionAccessData",
        outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "auctionAccessManager",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "auctionCounter",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "auctionData",
        outputs: [
            { internalType: "contract IERC20", name: "auctioningToken", type: "address" },
            { internalType: "contract IERC20", name: "biddingToken", type: "address" },
            { internalType: "uint256", name: "orderCancellationEndDate", type: "uint256" },
            { internalType: "uint256", name: "auctionEndDate", type: "uint256" },
            { internalType: "bytes32", name: "initialAuctionOrder", type: "bytes32" },
            { internalType: "uint256", name: "minimumBiddingAmountPerOrder", type: "uint256" },
            { internalType: "uint256", name: "interimSumBidAmount", type: "uint256" },
            { internalType: "bytes32", name: "interimOrder", type: "bytes32" },
            { internalType: "bytes32", name: "clearingPriceOrder", type: "bytes32" },
            { internalType: "uint96", name: "volumeClearingPriceOrder", type: "uint96" },
            { internalType: "bool", name: "minFundingThresholdNotReached", type: "bool" },
            { internalType: "bool", name: "isAtomicClosureAllowed", type: "bool" },
            { internalType: "uint256", name: "feeNumerator", type: "uint256" },
            { internalType: "uint256", name: "minFundingThreshold", type: "uint256" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "bytes32[]", name: "_sellOrders", type: "bytes32[]" },
        ],
        name: "cancelSellOrders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "bytes32[]", name: "orders", type: "bytes32[]" },
        ],
        name: "claimFromParticipantOrder",
        outputs: [
            { internalType: "uint256", name: "sumAuctioningTokenAmount", type: "uint256" },
            { internalType: "uint256", name: "sumBiddingTokenAmount", type: "uint256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "bytes32", name: "order", type: "bytes32" },
        ],
        name: "containsOrder",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "feeNumerator",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "feeReceiverUserId",
        outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "auctionId", type: "uint256" }],
        name: "getSecondsRemainingInBatch",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "user", type: "address" }],
        name: "getUserId",
        outputs: [{ internalType: "uint64", name: "userId", type: "uint64" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract IERC20", name: "_auctioningToken", type: "address" },
            { internalType: "contract IERC20", name: "_biddingToken", type: "address" },
            { internalType: "uint256", name: "orderCancellationEndDate", type: "uint256" },
            { internalType: "uint256", name: "auctionEndDate", type: "uint256" },
            { internalType: "uint96", name: "_auctionedSellAmount", type: "uint96" },
            { internalType: "uint96", name: "_minBuyAmount", type: "uint96" },
            { internalType: "uint256", name: "minimumBiddingAmountPerOrder", type: "uint256" },
            { internalType: "uint256", name: "minFundingThreshold", type: "uint256" },
            { internalType: "bool", name: "isAtomicClosureAllowed", type: "bool" },
            { internalType: "address", name: "accessManagerContract", type: "address" },
            { internalType: "bytes", name: "accessManagerContractData", type: "bytes" },
        ],
        name: "initiateAuction",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "numUsers",
        outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "uint96[]", name: "_minBuyAmounts", type: "uint96[]" },
            { internalType: "uint96[]", name: "_sellAmounts", type: "uint96[]" },
            { internalType: "bytes32[]", name: "_prevSellOrders", type: "bytes32[]" },
            { internalType: "bytes", name: "allowListCallData", type: "bytes" },
        ],
        name: "placeSellOrders",
        outputs: [{ internalType: "uint64", name: "userId", type: "uint64" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "uint96[]", name: "_minBuyAmounts", type: "uint96[]" },
            { internalType: "uint96[]", name: "_sellAmounts", type: "uint96[]" },
            { internalType: "bytes32[]", name: "_prevSellOrders", type: "bytes32[]" },
            { internalType: "bytes", name: "allowListCallData", type: "bytes" },
            { internalType: "address", name: "orderSubmitter", type: "address" },
        ],
        name: "placeSellOrdersOnBehalf",
        outputs: [{ internalType: "uint64", name: "userId", type: "uint64" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "uint256", name: "iterationSteps", type: "uint256" },
        ],
        name: "precalculateSellAmountSum",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "user", type: "address" }],
        name: "registerUser",
        outputs: [{ internalType: "uint64", name: "userId", type: "uint64" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "newFeeNumerator", type: "uint256" },
            { internalType: "address", name: "newfeeReceiverAddress", type: "address" },
        ],
        name: "setFeeParameters",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "auctionId", type: "uint256" }],
        name: "settleAuction",
        outputs: [{ internalType: "bytes32", name: "clearingOrder", type: "bytes32" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "auctionId", type: "uint256" },
            { internalType: "uint96[]", name: "_minBuyAmount", type: "uint96[]" },
            { internalType: "uint96[]", name: "_sellAmount", type: "uint96[]" },
            { internalType: "bytes32[]", name: "_prevSellOrder", type: "bytes32[]" },
            { internalType: "bytes", name: "allowListCallData", type: "bytes" },
        ],
        name: "settleAuctionAtomically",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

export const feAuctioneerAbi = [
    {
        inputs: [
            { internalType: "contract IBondTeller", name: "teller_", type: "address" },
            { internalType: "contract IBondAggregator", name: "aggregator_", type: "address" },
            { internalType: "address", name: "guardian_", type: "address" },
            { internalType: "contract Authority", name: "authority_", type: "address" },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    { inputs: [], name: "Auctioneer_AmountLessThanMinimum", type: "error" },
    { inputs: [], name: "Auctioneer_BadExpiry", type: "error" },
    { inputs: [], name: "Auctioneer_InitialPriceLessThanMin", type: "error" },
    { inputs: [], name: "Auctioneer_InvalidCallback", type: "error" },
    { inputs: [], name: "Auctioneer_InvalidParams", type: "error" },
    {
        inputs: [{ internalType: "uint256", name: "conclusion_", type: "uint256" }],
        name: "Auctioneer_MarketConcluded",
        type: "error",
    },
    { inputs: [], name: "Auctioneer_MaxPayoutExceeded", type: "error" },
    { inputs: [], name: "Auctioneer_NewMarketsNotAllowed", type: "error" },
    { inputs: [], name: "Auctioneer_NotAuthorized", type: "error" },
    { inputs: [], name: "Auctioneer_NotEnoughCapacity", type: "error" },
    { inputs: [], name: "Auctioneer_OnlyMarketOwner", type: "error" },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            {
                indexed: true,
                internalType: "contract Authority",
                name: "newAuthority",
                type: "address",
            },
        ],
        name: "AuthorityUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, internalType: "uint256", name: "id", type: "uint256" }],
        name: "MarketClosed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
            { indexed: true, internalType: "address", name: "payoutToken", type: "address" },
            { indexed: true, internalType: "address", name: "quoteToken", type: "address" },
            { indexed: false, internalType: "uint48", name: "vesting", type: "uint48" },
            { indexed: false, internalType: "uint256", name: "initialPrice", type: "uint256" },
        ],
        name: "MarketCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
        ],
        name: "OwnerUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
            {
                indexed: false,
                internalType: "uint256",
                name: "oldControlVariable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newControlVariable",
                type: "uint256",
            },
        ],
        name: "Tuned",
        type: "event",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "adjustments",
        outputs: [
            { internalType: "uint256", name: "change", type: "uint256" },
            { internalType: "uint48", name: "lastAdjustment", type: "uint48" },
            { internalType: "uint48", name: "timeToAdjusted", type: "uint48" },
            { internalType: "bool", name: "active", type: "bool" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "allowNewMarkets",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "authority",
        outputs: [{ internalType: "contract Authority", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "callbackAuthorized",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "closeMarket",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "bytes", name: "params_", type: "bytes" }],
        name: "createMarket",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "currentCapacity",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "currentControlVariable",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "currentDebt",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "defaultTuneAdjustment",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "defaultTuneInterval",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAggregator",
        outputs: [{ internalType: "contract IBondAggregator", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "getMarketInfoForPurchase",
        outputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "callbackAddr", type: "address" },
            { internalType: "contract ERC20", name: "payoutToken", type: "address" },
            { internalType: "contract ERC20", name: "quoteToken", type: "address" },
            { internalType: "uint48", name: "vesting", type: "uint48" },
            { internalType: "uint256", name: "maxPayout", type: "uint256" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getTeller",
        outputs: [{ internalType: "contract IBondTeller", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "isInstantSwap",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "isLive",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "marketPrice",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "marketScale",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "markets",
        outputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "contract ERC20", name: "payoutToken", type: "address" },
            { internalType: "contract ERC20", name: "quoteToken", type: "address" },
            { internalType: "address", name: "callbackAddr", type: "address" },
            { internalType: "bool", name: "capacityInQuote", type: "bool" },
            { internalType: "uint256", name: "capacity", type: "uint256" },
            { internalType: "uint256", name: "totalDebt", type: "uint256" },
            { internalType: "uint256", name: "minPrice", type: "uint256" },
            { internalType: "uint256", name: "maxPayout", type: "uint256" },
            { internalType: "uint256", name: "sold", type: "uint256" },
            { internalType: "uint256", name: "purchased", type: "uint256" },
            { internalType: "uint256", name: "scale", type: "uint256" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "address", name: "referrer_", type: "address" },
        ],
        name: "maxAmountAccepted",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "metadata",
        outputs: [
            { internalType: "uint48", name: "lastTune", type: "uint48" },
            { internalType: "uint48", name: "lastDecay", type: "uint48" },
            { internalType: "uint32", name: "length", type: "uint32" },
            { internalType: "uint32", name: "depositInterval", type: "uint32" },
            { internalType: "uint32", name: "tuneInterval", type: "uint32" },
            { internalType: "uint32", name: "tuneAdjustmentDelay", type: "uint32" },
            { internalType: "uint32", name: "debtDecayInterval", type: "uint32" },
            { internalType: "uint256", name: "tuneIntervalCapacity", type: "uint256" },
            { internalType: "uint256", name: "tuneBelowCapacity", type: "uint256" },
            { internalType: "uint256", name: "lastTuneDebt", type: "uint256" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minDebtBuffer",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minDebtDecayInterval",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minDepositInterval",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minMarketDuration",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "newOwners",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "ownerOf",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "amount_", type: "uint256" },
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "address", name: "referrer_", type: "address" },
        ],
        name: "payoutFor",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "pullOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "uint256", name: "amount_", type: "uint256" },
            { internalType: "uint256", name: "minAmountOut_", type: "uint256" },
        ],
        name: "purchaseBond",
        outputs: [{ internalType: "uint256", name: "payout", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "address", name: "newOwner_", type: "address" },
        ],
        name: "pushOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "bool", name: "status_", type: "bool" }],
        name: "setAllowNewMarkets",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "contract Authority", name: "newAuthority", type: "address" }],
        name: "setAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "creator_", type: "address" },
            { internalType: "bool", name: "status_", type: "bool" },
        ],
        name: "setCallbackAuthStatus",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint32[6]", name: "defaults_", type: "uint32[6]" }],
        name: "setDefaults",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "uint32[3]", name: "intervals_", type: "uint32[3]" },
        ],
        name: "setIntervals",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "terms",
        outputs: [
            { internalType: "uint256", name: "controlVariable", type: "uint256" },
            { internalType: "uint256", name: "maxDebt", type: "uint256" },
            { internalType: "uint48", name: "vesting", type: "uint48" },
            { internalType: "uint48", name: "conclusion", type: "uint48" },
        ],
        stateMutability: "view",
        type: "function",
    },
];

export const feTellerAbi = [
    {
        inputs: [
            { internalType: "address", name: "protocol_", type: "address" },
            { internalType: "contract IBondAggregator", name: "aggregator_", type: "address" },
            { internalType: "address", name: "guardian_", type: "address" },
            { internalType: "contract Authority", name: "authority_", type: "address" },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    { inputs: [], name: "CreateFail", type: "error" },
    { inputs: [], name: "Teller_InvalidCallback", type: "error" },
    { inputs: [], name: "Teller_InvalidParams", type: "error" },
    { inputs: [], name: "Teller_NotAuthorized", type: "error" },
    {
        inputs: [
            { internalType: "contract ERC20", name: "underlying", type: "address" },
            { internalType: "uint48", name: "expiry", type: "uint48" },
        ],
        name: "Teller_TokenDoesNotExist",
        type: "error",
    },
    {
        inputs: [{ internalType: "uint48", name: "maturesOn", type: "uint48" }],
        name: "Teller_TokenNotMatured",
        type: "error",
    },
    { inputs: [], name: "Teller_UnsupportedToken", type: "error" },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            {
                indexed: true,
                internalType: "contract Authority",
                name: "newAuthority",
                type: "address",
            },
        ],
        name: "AuthorityUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
            { indexed: true, internalType: "address", name: "referrer", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "payout", type: "uint256" },
        ],
        name: "Bonded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract ERC20BondToken",
                name: "bondToken",
                type: "address",
            },
            { indexed: true, internalType: "contract ERC20", name: "underlying", type: "address" },
            { indexed: true, internalType: "uint48", name: "expiry", type: "uint48" },
        ],
        name: "ERC20BondTokenCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
        ],
        name: "OwnerUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "FEE_DECIMALS",
        outputs: [{ internalType: "uint48", name: "", type: "uint48" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "authority",
        outputs: [{ internalType: "contract Authority", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "bondTokenImplementation",
        outputs: [{ internalType: "contract ERC20BondToken", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract ERC20", name: "", type: "address" },
            { internalType: "uint48", name: "", type: "uint48" },
        ],
        name: "bondTokens",
        outputs: [{ internalType: "contract ERC20BondToken", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract ERC20[]", name: "tokens_", type: "address[]" },
            { internalType: "address", name: "to_", type: "address" },
        ],
        name: "claimFees",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract ERC20", name: "underlying_", type: "address" },
            { internalType: "uint48", name: "expiry_", type: "uint48" },
            { internalType: "uint256", name: "amount_", type: "uint256" },
        ],
        name: "create",
        outputs: [
            { internalType: "contract ERC20BondToken", name: "", type: "address" },
            { internalType: "uint256", name: "", type: "uint256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "createFeeDiscount",
        outputs: [{ internalType: "uint48", name: "", type: "uint48" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract ERC20", name: "underlying_", type: "address" },
            { internalType: "uint48", name: "expiry_", type: "uint48" },
        ],
        name: "deploy",
        outputs: [{ internalType: "contract ERC20BondToken", name: "", type: "address" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "getBondTokenForMarket",
        outputs: [{ internalType: "contract ERC20BondToken", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "referrer_", type: "address" }],
        name: "getFee",
        outputs: [{ internalType: "uint48", name: "", type: "uint48" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "protocolFee",
        outputs: [{ internalType: "uint48", name: "", type: "uint48" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "recipient_", type: "address" },
            { internalType: "address", name: "referrer_", type: "address" },
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "uint256", name: "amount_", type: "uint256" },
            { internalType: "uint256", name: "minAmountOut_", type: "uint256" },
        ],
        name: "purchase",
        outputs: [
            { internalType: "uint256", name: "", type: "uint256" },
            { internalType: "uint48", name: "", type: "uint48" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract ERC20BondToken", name: "token_", type: "address" },
            { internalType: "uint256", name: "amount_", type: "uint256" },
        ],
        name: "redeem",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "referrerFees",
        outputs: [{ internalType: "uint48", name: "", type: "uint48" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "", type: "address" },
            { internalType: "contract ERC20", name: "", type: "address" },
        ],
        name: "rewards",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "contract Authority", name: "newAuthority", type: "address" }],
        name: "setAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint48", name: "fee_", type: "uint48" }],
        name: "setProtocolFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint48", name: "fee_", type: "uint48" }],
        name: "setReferrerFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

export const bondAggregatorAbi = [
    {
        inputs: [
            { internalType: "address", name: "guardian_", type: "address" },
            { internalType: "contract Authority", name: "authority_", type: "address" },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    { inputs: [], name: "Aggregator_OnlyAuctioneer", type: "error" },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            {
                indexed: true,
                internalType: "contract Authority",
                name: "newAuthority",
                type: "address",
            },
        ],
        name: "AuthorityUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
        ],
        name: "OwnerUpdated",
        type: "event",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "auctioneers",
        outputs: [{ internalType: "contract IBondAuctioneer", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "authority",
        outputs: [{ internalType: "contract Authority", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "currentCapacity",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "payout_", type: "address" },
            { internalType: "address", name: "quote_", type: "address" },
            { internalType: "uint256", name: "amountIn_", type: "uint256" },
            { internalType: "uint256", name: "minAmountOut_", type: "uint256" },
            { internalType: "uint256", name: "maxExpiry_", type: "uint256" },
        ],
        name: "findMarketFor",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "getAuctioneer",
        outputs: [{ internalType: "contract IBondAuctioneer", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "getTeller",
        outputs: [{ internalType: "contract IBondTeller", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "isInstantSwap",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "isLive",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "firstIndex_", type: "uint256" },
            { internalType: "uint256", name: "lastIndex_", type: "uint256" },
        ],
        name: "liveMarketsBetween",
        outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "owner_", type: "address" }],
        name: "liveMarketsBy",
        outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "token_", type: "address" },
            { internalType: "bool", name: "isPayout_", type: "bool" },
        ],
        name: "liveMarketsFor",
        outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "marketCounter",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "marketPrice",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "id_", type: "uint256" }],
        name: "marketScale",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "payout_", type: "address" },
            { internalType: "address", name: "quote_", type: "address" },
        ],
        name: "marketsFor",
        outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "", type: "address" },
            { internalType: "uint256", name: "", type: "uint256" },
        ],
        name: "marketsForPayout",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "", type: "address" },
            { internalType: "uint256", name: "", type: "uint256" },
        ],
        name: "marketsForQuote",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "marketsToAuctioneers",
        outputs: [{ internalType: "contract IBondAuctioneer", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "address", name: "referrer_", type: "address" },
        ],
        name: "maxAmountAccepted",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "amount_", type: "uint256" },
            { internalType: "uint256", name: "id_", type: "uint256" },
            { internalType: "address", name: "referrer_", type: "address" },
        ],
        name: "payoutFor",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract IBondAuctioneer", name: "auctioneer_", type: "address" },
        ],
        name: "registerAuctioneer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "contract ERC20", name: "payoutToken_", type: "address" },
            { internalType: "contract ERC20", name: "quoteToken_", type: "address" },
        ],
        name: "registerMarket",
        outputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "contract Authority", name: "newAuthority", type: "address" }],
        name: "setAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
